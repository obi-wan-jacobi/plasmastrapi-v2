{
    "extends": ["tslint:recommended", "tslint-consistent-codestyle"],
    "rules": {
        "semicolon": [true, "always"],
        "variable-name": [false, "always"],
        "naming-convention": [true,
                // this config will apply to properties AND methods, if you only need it for properties, use "property" instead of "member"
                {"type": "member", "format": "camelCase"}, // use camelCase for all members, will be inherited by protected and private
                {"type": "member", "modifiers": "protected", "prefix": "_", "format": "camelCase"}, // protected members will be REQUIRED to have a leading underscore. you can use "allow" as alternative
                {"type": "member", "modifiers": "private", "prefix": "__", "format": "camelCase"} // to simply allow and not enforce double leading underscores, use "prefix": ["__", ""]
            ],
            "only-arrow-functions": false,
            "no-console": false,
            "no-magic-numbers": true,
            "member-access": true,
            "curly": true,
            "no-arg": true,
            "no-conditional-assignment": true,
            "no-construct": true,
            "no-duplicate-imports": true,
            "no-duplicate-switch-case": true,
            "no-duplicate-variable": true,
            "no-dynamic-delete": true,
            "no-invalid-template-strings": true,
            // "no-invalid-this": true,
            "no-consecutive-blank-lines": true,
            "arrow-parens": true,
            "class-name": true,
            "typedef": [
                true,
                "call-signature",
                "property-declaration"
            ],
            "quotemark": [true, "single"]
    }
}